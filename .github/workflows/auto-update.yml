name: Auto-update packages

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Manual trigger

jobs:
  update-zen-browser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Gentoo environment
        uses: docker://gentoo/stage3:amd64-desktop-systemd

      - name: Check for new Zen Browser release
        id: check-release
        run: |
          # Get latest release from GitHub API
          LATEST=$(curl -s https://api.github.com/repos/zen-browser/desktop/releases/latest | jq -r .tag_name)
          CURRENT=$(ls www-client/zen-browser-bin/zen-browser-bin-*.ebuild | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+b' | sort -V | tail -1)

          if [ "$LATEST" != "$CURRENT" ]; then
            echo "update-needed=true" >> $GITHUB_OUTPUT
            echo "new-version=$LATEST" >> $GITHUB_OUTPUT
          fi

      - name: Generate new ebuild
        if: steps.check-release.outputs.update-needed == 'true'
        run: |
          # Copy latest ebuild and update version
          cd www-client/zen-browser-bin/
          LATEST_EBUILD=$(ls zen-browser-bin-*.ebuild | sort -V | tail -1)
          NEW_VERSION=${{ steps.check-release.outputs.new-version }}
          cp "$LATEST_EBUILD" "zen-browser-bin-${NEW_VERSION}.ebuild"

          # Generate manifest
          ebuild "zen-browser-bin-${NEW_VERSION}.ebuild" manifest

      - name: Create Pull Request
        if: steps.check-release.outputs.update-needed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Auto-update zen-browser-bin to ${{ steps.check-release.outputs.new-version }}"
          body: |
            Automated update of zen-browser-bin package
            - New version: ${{ steps.check-release.outputs.new-version }}
            - Generated by CI pipeline
          branch: auto-update/zen-browser-${{ steps.check-release.outputs.new-version }}
