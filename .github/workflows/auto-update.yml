name: Auto-update packages

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Manual trigger

jobs:
  update-zen-browser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for new Zen Browser release
        id: check-release
        run: |
          # Get latest release from GitHub API
          LATEST=$(curl -s https://api.github.com/repos/zen-browser/desktop/releases/latest | jq -r .tag_name)

          # Get current latest version from existing ebuilds
          if ls www-client/zen-browser-bin/zen-browser-bin-*.ebuild 1> /dev/null 2>&1; then
            CURRENT=$(ls www-client/zen-browser-bin/zen-browser-bin-*.ebuild | sed 's/.*zen-browser-bin-\(.*\)\.ebuild/\1/' | sort -V | tail -1)
          else
            CURRENT=""
          fi

          echo "Latest release: $LATEST"
          echo "Current version: $CURRENT"

          if [ "$LATEST" != "$CURRENT" ]; then
            echo "update-needed=true" >> $GITHUB_OUTPUT
            echo "new-version=$LATEST" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT -> $LATEST"
          else
            echo "update-needed=false" >> $GITHUB_OUTPUT
            echo "No update needed"
          fi

      - name: Generate new ebuild and update manifest
        if: steps.check-release.outputs.update-needed == 'true'
        run: |
          cd www-client/zen-browser-bin/

          # Find the latest existing ebuild
          LATEST_EBUILD=$(ls zen-browser-bin-*.ebuild | sort -V | tail -1)
          NEW_VERSION=${{ steps.check-release.outputs.new-version }}
          NEW_EBUILD="zen-browser-bin-${NEW_VERSION}.ebuild"

          echo "Copying $LATEST_EBUILD to $NEW_EBUILD"
          cp "$LATEST_EBUILD" "$NEW_EBUILD"

          # Get file sizes for manifest
          AMD64_SIZE=$(curl -sI "https://github.com/zen-browser/desktop/releases/download/${NEW_VERSION}/zen.linux-x86_64.tar.xz" | grep -i content-length | awk '{print $2}' | tr -d '\r')
          ARM64_SIZE=$(curl -sI "https://github.com/zen-browser/desktop/releases/download/${NEW_VERSION}/zen.linux-aarch64.tar.xz" | grep -i content-length | awk '{print $2}' | tr -d '\r')

          # Update manifest with new entries
          echo "DIST zen-browser-bin-${NEW_VERSION}-x86_64.tar.xz ${AMD64_SIZE} BLAKE2B - SHA512 -" >> Manifest
          echo "DIST zen-browser-bin-${NEW_VERSION}-aarch64.tar.xz ${ARM64_SIZE} BLAKE2B - SHA512 -" >> Manifest

          echo "Generated new ebuild for version ${NEW_VERSION}"
          echo "Updated Manifest with new distribution files"

      - name: Create Pull Request
        if: steps.check-release.outputs.update-needed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "www-client/zen-browser-bin: bump to ${{ steps.check-release.outputs.new-version }}"
          title: "www-client/zen-browser-bin: bump to ${{ steps.check-release.outputs.new-version }}"
          body: |
            Automated update of zen-browser-bin package

            New version: ${{ steps.check-release.outputs.new-version }}

            Changes:
            - New ebuild: zen-browser-bin-${{ steps.check-release.outputs.new-version }}.ebuild
            - Updated Manifest with distribution files

            Release notes: https://github.com/zen-browser/desktop/releases/tag/${{ steps.check-release.outputs.new-version }}

            Manual steps required:
            ```
            cd www-client/zen-browser-bin
            sudo ebuild zen-browser-bin-${{ steps.check-release.outputs.new-version }}.ebuild manifest
            ```
          branch: auto-update/zen-browser-${{ steps.check-release.outputs.new-version }}
          delete-branch: true

      - name: Summary
        run: |
          if [ "${{ steps.check-release.outputs.update-needed }}" == "true" ]; then
            echo "Created PR for Zen Browser ${{ steps.check-release.outputs.new-version }}"
            echo "Check: https://github.com/${{ github.repository }}/pulls"
          else
            echo "No update needed - already at latest version"
          fi
