name: Auto-update vesktop-bin

on:
  schedule:
    # Run daily at 6:30 AM UTC (offset from other workflows)
    - cron: '30 6 * * *'
  workflow_dispatch: # Manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for new release
        id: check
        run: |
          # Get latest release from GitHub API
          LATEST=$(curl -s https://api.github.com/repos/Vencord/Vesktop/releases/latest | jq -r .tag_name | sed 's/^v//')

          # Get current latest version from existing ebuilds
          if ls net-im/vesktop-bin/vesktop-bin-*.ebuild 1> /dev/null 2>&1; then
            CURRENT=$(ls net-im/vesktop-bin/vesktop-bin-*.ebuild | sed 's/.*vesktop-bin-\(.*\)\.ebuild/\1/' | sort -V | tail -1)
          else
            CURRENT=""
          fi

          echo "Latest release: $LATEST"
          echo "Current version: $CURRENT"

          if [ "$LATEST" != "$CURRENT" ]; then
            echo "update-needed=true" >> $GITHUB_OUTPUT
            echo "version=$LATEST" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT -> $LATEST"
          else
            echo "update-needed=false" >> $GITHUB_OUTPUT
            echo "No update needed"
          fi

      - name: Generate new ebuild and update manifest
        if: steps.check.outputs.update-needed == 'true'
        run: |
          cd net-im/vesktop-bin/

          # Find the latest existing ebuild
          LATEST_EBUILD=$(ls vesktop-bin-*.ebuild | sort -V | tail -1)
          NEW_VERSION=${{ steps.check.outputs.version }}
          NEW_EBUILD="vesktop-bin-${NEW_VERSION}.ebuild"

          echo "Copying $LATEST_EBUILD to $NEW_EBUILD"
          cp "$LATEST_EBUILD" "$NEW_EBUILD"

          # Get file sizes and verify downloads
          AMD64_URL="https://github.com/Vencord/Vesktop/releases/download/v${NEW_VERSION}/vesktop-${NEW_VERSION}.tar.gz"
          ARM64_URL="https://github.com/Vencord/Vesktop/releases/download/v${NEW_VERSION}/vesktop-${NEW_VERSION}-arm64.tar.gz"

          # Get file sizes with follow redirects
          AMD64_SIZE=$(curl -sIL "${AMD64_URL}" | grep -i '^content-length:' | tail -1 | awk '{print $2}' | tr -d '\r')
          ARM64_SIZE=$(curl -sIL "${ARM64_URL}" | grep -i '^content-length:' | tail -1 | awk '{print $2}' | tr -d '\r')

          # Verify we got valid sizes
          if [ -z "$AMD64_SIZE" ] || [ "$AMD64_SIZE" = "0" ]; then
            echo "ERROR: Could not determine AMD64 file size from ${AMD64_URL}"
            exit 1
          fi

          if [ -z "$ARM64_SIZE" ] || [ "$ARM64_SIZE" = "0" ]; then
            echo "ERROR: Could not determine ARM64 file size from ${ARM64_URL}"
            exit 1
          fi

          echo "Verified AMD64 file: ${AMD64_SIZE} bytes"
          echo "Verified ARM64 file: ${ARM64_SIZE} bytes"

          # Update manifest with new entries
          echo "DIST vesktop-${NEW_VERSION}.tar.gz ${AMD64_SIZE} BLAKE2B - SHA512 -" >> Manifest
          echo "DIST vesktop-${NEW_VERSION}-arm64.tar.gz ${ARM64_SIZE} BLAKE2B - SHA512 -" >> Manifest

          echo "Generated new ebuild for version ${NEW_VERSION}"
          echo "Updated Manifest with new distribution files"

      - name: Create Pull Request
        if: steps.check.outputs.update-needed == 'true'
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "net-im/vesktop-bin: bump to ${{ steps.check.outputs.version }}"
          title: "net-im/vesktop-bin: bump to ${{ steps.check.outputs.version }}"
          body: |
            Automated update of vesktop-bin package

            New version: ${{ steps.check.outputs.version }}

            Changes:
            - New ebuild: vesktop-bin-${{ steps.check.outputs.version }}.ebuild
            - Updated Manifest with distribution files (amd64 and arm64)

            Release notes: https://github.com/Vencord/Vesktop/releases/tag/v${{ steps.check.outputs.version }}

            Manual steps required:
            ```bash
            cd net-im/vesktop-bin
            sudo ebuild vesktop-bin-${{ steps.check.outputs.version }}.ebuild manifest
            ```
          branch: auto-update/vesktop-${{ steps.check.outputs.version }}
          delete-branch: true
          labels: |
            automated
            bump

      - name: Summary
        run: |
          if [ "${{ steps.check.outputs.update-needed }}" == "true" ]; then
            echo "Created PR for Vesktop ${{ steps.check.outputs.version }}"
            echo "Check: https://github.com/${{ github.repository }}/pulls"
          else
            echo "No update needed - already at latest version"
          fi
